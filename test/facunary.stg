zero = CON(Z);
one = CON(S zero);
two = CON(S one);
three = CON(S two);
six = THUNK(fac three);

multiply = FUN(x y -> 
   case x of 
      { Z -> x;
        S n -> let { rec = THUNK(multiply n y)} in add y rec });

add = FUN(x y -> 
   case x of 
      { Z -> y;
        S n -> let { rec = THUNK(add n y);
                     result = CON(S rec) }
               in result
      });

fac = FUN (n -> 
   case n of
      { Z -> one;
        S m -> let { rec = THUNK(fac m) } in multiply n rec });
                     
main = THUNK (fac six) 
